
MT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c8  00800100  00000990  00000a24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000990  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000103  008001c8  008001c8  00000aec  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000aec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b48  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000b88  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c03  00000000  00000000  00000be0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007b1  00000000  00000000  000017e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000046a  00000000  00000000  00001f94  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  00002400  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043e  00000000  00000000  000024f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000457  00000000  00000000  00002936  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002d8d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e9       	ldi	r30, 0x90	; 144
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 3c       	cpi	r26, 0xC8	; 200
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a8 ec       	ldi	r26, 0xC8	; 200
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 3c       	cpi	r26, 0xCB	; 203
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ad 00 	call	0x15a	; 0x15a <main>
  9e:	0c 94 c6 04 	jmp	0x98c	; 0x98c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:


void adc_init(void) //initialize ADC
{
	
	ADMUX = (0<<REFS1)| // Reference Selection Bits
  a6:	82 e4       	ldi	r24, 0x42	; 66
  a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(0<<ADLAR)| // ADC Left Adjust Result
	(0<<MUX2)| // ANalog Channel Selection Bits
	(1<<MUX1)| // ADC2 (PC2 PIN25)
	(0<<MUX0);

	ADCSRA = (1<<ADEN)| // ADC ENable
  ac:	85 e8       	ldi	r24, 0x85	; 133
  ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	(0<<ADPS1)|
	(1<<ADPS0);

	// Timer/Counter1 Interrupt Mask Register

	TIMSK1 |= (1<<TOIE1); // enable overflow interrupt
  b2:	ef e6       	ldi	r30, 0x6F	; 111
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	81 60       	ori	r24, 0x01	; 1
  ba:	80 83       	st	Z, r24
	TCCR1B |= (1<<CS12)|(1<<CS10); // native clock
  bc:	e1 e8       	ldi	r30, 0x81	; 129
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	85 60       	ori	r24, 0x05	; 5
  c4:	80 83       	st	Z, r24
	TCNT1 = 49911; //((16MHz/1024)*1)-1 = 15624
  c6:	87 ef       	ldi	r24, 0xF7	; 247
  c8:	92 ec       	ldi	r25, 0xC2	; 194
  ca:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  ce:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  d2:	08 95       	ret

000000d4 <read_adc>:
}


void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0; //initialize
  d4:	10 92 c9 02 	sts	0x02C9, r1	; 0x8002c9 <adc_temp+0x1>
  d8:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <adc_temp>
  dc:	24 e0       	ldi	r18, 0x04	; 4
	while (i--) {
		ADCSRA |= (1<<ADSC);
  de:	ea e7       	ldi	r30, 0x7A	; 122
  e0:	f0 e0       	ldi	r31, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
  e2:	a8 e7       	ldi	r26, 0x78	; 120
  e4:	b0 e0       	ldi	r27, 0x00	; 0

void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0; //initialize
	while (i--) {
		ADCSRA |= (1<<ADSC);
  e6:	80 81       	ld	r24, Z
  e8:	80 64       	ori	r24, 0x40	; 64
  ea:	80 83       	st	Z, r24
		while(ADCSRA & (1<<ADSC));
  ec:	80 81       	ld	r24, Z
  ee:	86 fd       	sbrc	r24, 6
  f0:	fd cf       	rjmp	.-6      	; 0xec <read_adc+0x18>
		adc_temp+= ADC;
  f2:	4d 91       	ld	r20, X+
  f4:	5c 91       	ld	r21, X
  f6:	11 97       	sbiw	r26, 0x01	; 1
  f8:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <adc_temp>
  fc:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <adc_temp+0x1>
 100:	84 0f       	add	r24, r20
 102:	95 1f       	adc	r25, r21
 104:	90 93 c9 02 	sts	0x02C9, r25	; 0x8002c9 <adc_temp+0x1>
 108:	80 93 c8 02 	sts	0x02C8, r24	; 0x8002c8 <adc_temp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10c:	3f ef       	ldi	r19, 0xFF	; 255
 10e:	80 e7       	ldi	r24, 0x70	; 112
 110:	92 e0       	ldi	r25, 0x02	; 2
 112:	31 50       	subi	r19, 0x01	; 1
 114:	80 40       	sbci	r24, 0x00	; 0
 116:	90 40       	sbci	r25, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <read_adc+0x3e>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <read_adc+0x48>
 11c:	00 00       	nop
 11e:	21 50       	subi	r18, 0x01	; 1


void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0; //initialize
	while (i--) {
 120:	11 f7       	brne	.-60     	; 0xe6 <read_adc+0x12>
		ADCSRA |= (1<<ADSC);
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
		_delay_ms(50);
	}
	adc_temp = adc_temp / 4; // Average a few samples
 122:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <adc_temp>
 126:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <adc_temp+0x1>
 12a:	96 95       	lsr	r25
 12c:	87 95       	ror	r24
 12e:	96 95       	lsr	r25
 130:	87 95       	ror	r24
 132:	90 93 c9 02 	sts	0x02C9, r25	; 0x8002c9 <adc_temp+0x1>
 136:	80 93 c8 02 	sts	0x02C8, r24	; 0x8002c8 <adc_temp>
 13a:	08 95       	ret

0000013c <USART_init>:

}

/* INIT USART (RS-232) */
void USART_init( unsigned int ubrr ) {
	UBRR0H = (unsigned char)(ubrr>>8);
 13c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
 140:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0)| ( 1 << RXCIE0); // Enable receiver, transmitter & RX interrupt
 144:	e1 ec       	ldi	r30, 0xC1	; 193
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	88 69       	ori	r24, 0x98	; 152
 14c:	80 83       	st	Z, r24
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
 14e:	e2 ec       	ldi	r30, 0xC2	; 194
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	86 60       	ori	r24, 0x06	; 6
 156:	80 83       	st	Z, r24
 158:	08 95       	ret

0000015a <main>:
	return received_data;
}

int main(void) {

	adc_init(); // Initialize the ADC (Analog / Digital Converter)
 15a:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
	USART_init(MYUBRR); // Initialize the USART (RS232 interface)
 15e:	87 e6       	ldi	r24, 0x67	; 103
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_init>
 166:	2f ef       	ldi	r18, 0xFF	; 255
 168:	89 e6       	ldi	r24, 0x69	; 105
 16a:	98 e1       	ldi	r25, 0x18	; 24
 16c:	21 50       	subi	r18, 0x01	; 1
 16e:	80 40       	sbci	r24, 0x00	; 0
 170:	90 40       	sbci	r25, 0x00	; 0
 172:	e1 f7       	brne	.-8      	; 0x16c <main+0x12>
 174:	00 c0       	rjmp	.+0      	; 0x176 <main+0x1c>
 176:	00 00       	nop
	_delay_ms(500); // wait a bit
	sei(); //interrupt
 178:	78 94       	sei
 17a:	ff cf       	rjmp	.-2      	; 0x17a <main+0x20>

0000017c <USART_tx_string>:
	UBRR0L = (unsigned char)ubrr;
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0)| ( 1 << RXCIE0); // Enable receiver, transmitter & RX interrupt
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
}

void USART_tx_string( char *data ) {
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
	while ((*data != '\0')) {
 180:	fc 01       	movw	r30, r24
 182:	20 81       	ld	r18, Z
 184:	22 23       	and	r18, r18
 186:	69 f0       	breq	.+26     	; 0x1a2 <USART_tx_string+0x26>
 188:	dc 01       	movw	r26, r24
 18a:	11 96       	adiw	r26, 0x01	; 1
		while (!(UCSR0A & (1 <<UDRE0)));
 18c:	e0 ec       	ldi	r30, 0xC0	; 192
 18e:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;
 190:	c6 ec       	ldi	r28, 0xC6	; 198
 192:	d0 e0       	ldi	r29, 0x00	; 0
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
}

void USART_tx_string( char *data ) {
	while ((*data != '\0')) {
		while (!(UCSR0A & (1 <<UDRE0)));
 194:	90 81       	ld	r25, Z
 196:	95 ff       	sbrs	r25, 5
 198:	fd cf       	rjmp	.-6      	; 0x194 <USART_tx_string+0x18>
		UDR0 = *data;
 19a:	28 83       	st	Y, r18
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0)| ( 1 << RXCIE0); // Enable receiver, transmitter & RX interrupt
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
}

void USART_tx_string( char *data ) {
	while ((*data != '\0')) {
 19c:	2d 91       	ld	r18, X+
 19e:	21 11       	cpse	r18, r1
 1a0:	f9 cf       	rjmp	.-14     	; 0x194 <USART_tx_string+0x18>
		while (!(UCSR0A & (1 <<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
 1a2:	df 91       	pop	r29
 1a4:	cf 91       	pop	r28
 1a6:	08 95       	ret

000001a8 <__vector_13>:


ISR(TIMER1_OVF_vect) //timer overflow interrupt to delay for 1 second
{
 1a8:	1f 92       	push	r1
 1aa:	0f 92       	push	r0
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	0f 92       	push	r0
 1b0:	11 24       	eor	r1, r1
 1b2:	2f 93       	push	r18
 1b4:	3f 93       	push	r19
 1b6:	4f 93       	push	r20
 1b8:	5f 93       	push	r21
 1ba:	6f 93       	push	r22
 1bc:	7f 93       	push	r23
 1be:	8f 93       	push	r24
 1c0:	9f 93       	push	r25
 1c2:	af 93       	push	r26
 1c4:	bf 93       	push	r27
 1c6:	ef 93       	push	r30
 1c8:	ff 93       	push	r31
 1ca:	cf 93       	push	r28
 1cc:	df 93       	push	r29
 1ce:	cd b7       	in	r28, 0x3d	; 61
 1d0:	de b7       	in	r29, 0x3e	; 62
 1d2:	cc 57       	subi	r28, 0x7C	; 124
 1d4:	d1 09       	sbc	r29, r1
 1d6:	de bf       	out	0x3e, r29	; 62
 1d8:	cd bf       	out	0x3d, r28	; 61
				char TEMP[256];
				unsigned char AT[] = "AT\r\n"; //AT Commands
 1da:	85 e0       	ldi	r24, 0x05	; 5
 1dc:	ec e4       	ldi	r30, 0x4C	; 76
 1de:	f1 e0       	ldi	r31, 0x01	; 1
 1e0:	de 01       	movw	r26, r28
 1e2:	11 96       	adiw	r26, 0x01	; 1
 1e4:	01 90       	ld	r0, Z+
 1e6:	0d 92       	st	X+, r0
 1e8:	8a 95       	dec	r24
 1ea:	e1 f7       	brne	.-8      	; 0x1e4 <__vector_13+0x3c>
				unsigned char CWMODE[] = "AT+CWMODE=1\r\n"; //Set MODE 
 1ec:	8e e0       	ldi	r24, 0x0E	; 14
 1ee:	e1 e5       	ldi	r30, 0x51	; 81
 1f0:	f1 e0       	ldi	r31, 0x01	; 1
 1f2:	de 01       	movw	r26, r28
 1f4:	16 96       	adiw	r26, 0x06	; 6
 1f6:	01 90       	ld	r0, Z+
 1f8:	0d 92       	st	X+, r0
 1fa:	8a 95       	dec	r24
 1fc:	e1 f7       	brne	.-8      	; 0x1f6 <__vector_13+0x4e>
				unsigned char CWJAP[] = "AT+CWJAP=\"Medrano\",\"brian0808\"\r\n"; 
 1fe:	81 e2       	ldi	r24, 0x21	; 33
 200:	ef e5       	ldi	r30, 0x5F	; 95
 202:	f1 e0       	ldi	r31, 0x01	; 1
 204:	de 01       	movw	r26, r28
 206:	54 96       	adiw	r26, 0x14	; 20
 208:	01 90       	ld	r0, Z+
 20a:	0d 92       	st	X+, r0
 20c:	8a 95       	dec	r24
 20e:	e1 f7       	brne	.-8      	; 0x208 <__vector_13+0x60>
				unsigned char CIPMUX[] = "AT+CIPMUX=0\r\n";
 210:	8e e0       	ldi	r24, 0x0E	; 14
 212:	e0 e8       	ldi	r30, 0x80	; 128
 214:	f1 e0       	ldi	r31, 0x01	; 1
 216:	de 01       	movw	r26, r28
 218:	d5 96       	adiw	r26, 0x35	; 53
 21a:	01 90       	ld	r0, Z+
 21c:	0d 92       	st	X+, r0
 21e:	8a 95       	dec	r24
 220:	e1 f7       	brne	.-8      	; 0x21a <__vector_13+0x72>
				unsigned char CIPSTART[] = "AT+CIPSTART=\"TCP\",\"184.106.153.149\",80\r\n";
 222:	89 e2       	ldi	r24, 0x29	; 41
 224:	ee e8       	ldi	r30, 0x8E	; 142
 226:	f1 e0       	ldi	r31, 0x01	; 1
 228:	de 01       	movw	r26, r28
 22a:	ad 5b       	subi	r26, 0xBD	; 189
 22c:	bf 4f       	sbci	r27, 0xFF	; 255
 22e:	01 90       	ld	r0, Z+
 230:	0d 92       	st	X+, r0
 232:	8a 95       	dec	r24
 234:	e1 f7       	brne	.-8      	; 0x22e <__vector_13+0x86>
				unsigned char CIPSEND[] = "AT+CIPSEND=100\r\n";
 236:	81 e1       	ldi	r24, 0x11	; 17
 238:	e7 eb       	ldi	r30, 0xB7	; 183
 23a:	f1 e0       	ldi	r31, 0x01	; 1
 23c:	de 01       	movw	r26, r28
 23e:	a4 59       	subi	r26, 0x94	; 148
 240:	bf 4f       	sbci	r27, 0xFF	; 255
 242:	01 90       	ld	r0, Z+
 244:	0d 92       	st	X+, r0
 246:	8a 95       	dec	r24
 248:	e1 f7       	brne	.-8      	; 0x242 <__vector_13+0x9a>
 24a:	2f ef       	ldi	r18, 0xFF	; 255
 24c:	33 ec       	ldi	r19, 0xC3	; 195
 24e:	89 e0       	ldi	r24, 0x09	; 9
 250:	21 50       	subi	r18, 0x01	; 1
 252:	30 40       	sbci	r19, 0x00	; 0
 254:	80 40       	sbci	r24, 0x00	; 0
 256:	e1 f7       	brne	.-8      	; 0x250 <__vector_13+0xa8>
 258:	00 c0       	rjmp	.+0      	; 0x25a <__vector_13+0xb2>
 25a:	00 00       	nop

				_delay_ms(200);
				USART_tx_string(AT);
 25c:	ce 01       	movw	r24, r28
 25e:	01 96       	adiw	r24, 0x01	; 1
 260:	0e 94 be 00 	call	0x17c	; 0x17c <USART_tx_string>
 264:	9f ef       	ldi	r25, 0xFF	; 255
 266:	23 e2       	ldi	r18, 0x23	; 35
 268:	34 ef       	ldi	r19, 0xF4	; 244
 26a:	91 50       	subi	r25, 0x01	; 1
 26c:	20 40       	sbci	r18, 0x00	; 0
 26e:	30 40       	sbci	r19, 0x00	; 0
 270:	e1 f7       	brne	.-8      	; 0x26a <__vector_13+0xc2>
 272:	00 c0       	rjmp	.+0      	; 0x274 <__vector_13+0xcc>
 274:	00 00       	nop
		
				_delay_ms(5000);
				USART_tx_string(CWMODE);
 276:	ce 01       	movw	r24, r28
 278:	06 96       	adiw	r24, 0x06	; 6
 27a:	0e 94 be 00 	call	0x17c	; 0x17c <USART_tx_string>
 27e:	8f ef       	ldi	r24, 0xFF	; 255
 280:	93 e2       	ldi	r25, 0x23	; 35
 282:	24 ef       	ldi	r18, 0xF4	; 244
 284:	81 50       	subi	r24, 0x01	; 1
 286:	90 40       	sbci	r25, 0x00	; 0
 288:	20 40       	sbci	r18, 0x00	; 0
 28a:	e1 f7       	brne	.-8      	; 0x284 <__vector_13+0xdc>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <__vector_13+0xe6>
 28e:	00 00       	nop
				
				//snprintf(CWJAP,sizeof(CWJAP),unsigned char CWJAP[] = "AT+CWJAP=\"%s\",\"%s\"\r\n", ssid, passwd;)	
				_delay_ms(5000);
				USART_tx_string(CWJAP);
 290:	ce 01       	movw	r24, r28
 292:	44 96       	adiw	r24, 0x14	; 20
 294:	0e 94 be 00 	call	0x17c	; 0x17c <USART_tx_string>
 298:	3f ef       	ldi	r19, 0xFF	; 255
 29a:	89 e5       	ldi	r24, 0x59	; 89
 29c:	92 e6       	ldi	r25, 0x62	; 98
 29e:	22 e0       	ldi	r18, 0x02	; 2
 2a0:	31 50       	subi	r19, 0x01	; 1
 2a2:	80 40       	sbci	r24, 0x00	; 0
 2a4:	90 40       	sbci	r25, 0x00	; 0
 2a6:	20 40       	sbci	r18, 0x00	; 0
 2a8:	d9 f7       	brne	.-10     	; 0x2a0 <__vector_13+0xf8>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <__vector_13+0x104>
 2ac:	00 00       	nop
				
				_delay_ms(15000);
				USART_tx_string(CIPMUX);
 2ae:	ce 01       	movw	r24, r28
 2b0:	c5 96       	adiw	r24, 0x35	; 53
 2b2:	0e 94 be 00 	call	0x17c	; 0x17c <USART_tx_string>
 2b6:	3a ea       	ldi	r19, 0xAA	; 170
 2b8:	86 ee       	ldi	r24, 0xE6	; 230
 2ba:	96 e9       	ldi	r25, 0x96	; 150
 2bc:	21 e0       	ldi	r18, 0x01	; 1
 2be:	31 50       	subi	r19, 0x01	; 1
 2c0:	80 40       	sbci	r24, 0x00	; 0
 2c2:	90 40       	sbci	r25, 0x00	; 0
 2c4:	20 40       	sbci	r18, 0x00	; 0
 2c6:	d9 f7       	brne	.-10     	; 0x2be <__vector_13+0x116>
 2c8:	00 00       	nop
				
				_delay_ms(10000);
				USART_tx_string(CIPSTART);
 2ca:	ce 01       	movw	r24, r28
 2cc:	8d 5b       	subi	r24, 0xBD	; 189
 2ce:	9f 4f       	sbci	r25, 0xFF	; 255
 2d0:	0e 94 be 00 	call	0x17c	; 0x17c <USART_tx_string>
 2d4:	3a ea       	ldi	r19, 0xAA	; 170
 2d6:	86 ee       	ldi	r24, 0xE6	; 230
 2d8:	96 e9       	ldi	r25, 0x96	; 150
 2da:	21 e0       	ldi	r18, 0x01	; 1
 2dc:	31 50       	subi	r19, 0x01	; 1
 2de:	80 40       	sbci	r24, 0x00	; 0
 2e0:	90 40       	sbci	r25, 0x00	; 0
 2e2:	20 40       	sbci	r18, 0x00	; 0
 2e4:	d9 f7       	brne	.-10     	; 0x2dc <__vector_13+0x134>
 2e6:	00 00       	nop
				
				_delay_ms(10000);
				USART_tx_string(CIPSEND);
 2e8:	ce 01       	movw	r24, r28
 2ea:	84 59       	subi	r24, 0x94	; 148
 2ec:	9f 4f       	sbci	r25, 0xFF	; 255
 2ee:	0e 94 be 00 	call	0x17c	; 0x17c <USART_tx_string>
 2f2:	3f ef       	ldi	r19, 0xFF	; 255
 2f4:	83 e2       	ldi	r24, 0x23	; 35
 2f6:	94 ef       	ldi	r25, 0xF4	; 244
 2f8:	31 50       	subi	r19, 0x01	; 1
 2fa:	80 40       	sbci	r24, 0x00	; 0
 2fc:	90 40       	sbci	r25, 0x00	; 0
 2fe:	e1 f7       	brne	.-8      	; 0x2f8 <__vector_13+0x150>
 300:	00 c0       	rjmp	.+0      	; 0x302 <__vector_13+0x15a>
 302:	00 00       	nop
				
				_delay_ms(5000);
				
	//snprintf(CWJAP,sizeof(CWJAP),unsigned char CWJAP[] = "AT+CWJAP=\"Medrano\",\"brian0808\"\r\n";)		
	PORTC^=(1<<5);
 304:	98 b1       	in	r25, 0x08	; 8
 306:	80 e2       	ldi	r24, 0x20	; 32
 308:	89 27       	eor	r24, r25
 30a:	88 b9       	out	0x08, r24	; 8
	read_adc();
 30c:	0e 94 6a 00 	call	0xd4	; 0xd4 <read_adc>
	snprintf(outs,sizeof(outs),"GET https://api.thingspeak.com/update?api_key=K8EZU01WUETX6RIM&field2=%3d\r\n", adc_temp);// print it
 310:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <adc_temp>
 314:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <adc_temp+0x1>
 318:	9f 93       	push	r25
 31a:	8f 93       	push	r24
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	91 e0       	ldi	r25, 0x01	; 1
 320:	9f 93       	push	r25
 322:	8f 93       	push	r24
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	8f 93       	push	r24
 328:	1f 92       	push	r1
 32a:	88 ec       	ldi	r24, 0xC8	; 200
 32c:	91 e0       	ldi	r25, 0x01	; 1
 32e:	9f 93       	push	r25
 330:	8f 93       	push	r24
 332:	0e 94 ce 01 	call	0x39c	; 0x39c <snprintf>
	USART_tx_string(outs);
 336:	88 ec       	ldi	r24, 0xC8	; 200
 338:	91 e0       	ldi	r25, 0x01	; 1
 33a:	0e 94 be 00 	call	0x17c	; 0x17c <USART_tx_string>
 33e:	2a ea       	ldi	r18, 0xAA	; 170
 340:	36 ee       	ldi	r19, 0xE6	; 230
 342:	86 e9       	ldi	r24, 0x96	; 150
 344:	91 e0       	ldi	r25, 0x01	; 1
 346:	21 50       	subi	r18, 0x01	; 1
 348:	30 40       	sbci	r19, 0x00	; 0
 34a:	80 40       	sbci	r24, 0x00	; 0
 34c:	90 40       	sbci	r25, 0x00	; 0
 34e:	d9 f7       	brne	.-10     	; 0x346 <__vector_13+0x19e>
 350:	00 00       	nop
	_delay_ms(10000);
	TCNT1 = 49911;
 352:	87 ef       	ldi	r24, 0xF7	; 247
 354:	92 ec       	ldi	r25, 0xC2	; 194
 356:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 35a:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
 35e:	0f b6       	in	r0, 0x3f	; 63
 360:	f8 94       	cli
 362:	de bf       	out	0x3e, r29	; 62
 364:	0f be       	out	0x3f, r0	; 63
 366:	cd bf       	out	0x3d, r28	; 61
 368:	c4 58       	subi	r28, 0x84	; 132
 36a:	df 4f       	sbci	r29, 0xFF	; 255
 36c:	0f b6       	in	r0, 0x3f	; 63
 36e:	f8 94       	cli
 370:	de bf       	out	0x3e, r29	; 62
 372:	0f be       	out	0x3f, r0	; 63
 374:	cd bf       	out	0x3d, r28	; 61
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	ff 91       	pop	r31
 37c:	ef 91       	pop	r30
 37e:	bf 91       	pop	r27
 380:	af 91       	pop	r26
 382:	9f 91       	pop	r25
 384:	8f 91       	pop	r24
 386:	7f 91       	pop	r23
 388:	6f 91       	pop	r22
 38a:	5f 91       	pop	r21
 38c:	4f 91       	pop	r20
 38e:	3f 91       	pop	r19
 390:	2f 91       	pop	r18
 392:	0f 90       	pop	r0
 394:	0f be       	out	0x3f, r0	; 63
 396:	0f 90       	pop	r0
 398:	1f 90       	pop	r1
 39a:	18 95       	reti

0000039c <snprintf>:
 39c:	ae e0       	ldi	r26, 0x0E	; 14
 39e:	b0 e0       	ldi	r27, 0x00	; 0
 3a0:	e4 ed       	ldi	r30, 0xD4	; 212
 3a2:	f1 e0       	ldi	r31, 0x01	; 1
 3a4:	0c 94 9d 04 	jmp	0x93a	; 0x93a <__prologue_saves__+0x1c>
 3a8:	0d 89       	ldd	r16, Y+21	; 0x15
 3aa:	1e 89       	ldd	r17, Y+22	; 0x16
 3ac:	8f 89       	ldd	r24, Y+23	; 0x17
 3ae:	98 8d       	ldd	r25, Y+24	; 0x18
 3b0:	26 e0       	ldi	r18, 0x06	; 6
 3b2:	2c 83       	std	Y+4, r18	; 0x04
 3b4:	1a 83       	std	Y+2, r17	; 0x02
 3b6:	09 83       	std	Y+1, r16	; 0x01
 3b8:	97 ff       	sbrs	r25, 7
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <snprintf+0x24>
 3bc:	80 e0       	ldi	r24, 0x00	; 0
 3be:	90 e8       	ldi	r25, 0x80	; 128
 3c0:	01 97       	sbiw	r24, 0x01	; 1
 3c2:	9e 83       	std	Y+6, r25	; 0x06
 3c4:	8d 83       	std	Y+5, r24	; 0x05
 3c6:	ae 01       	movw	r20, r28
 3c8:	45 5e       	subi	r20, 0xE5	; 229
 3ca:	5f 4f       	sbci	r21, 0xFF	; 255
 3cc:	69 8d       	ldd	r22, Y+25	; 0x19
 3ce:	7a 8d       	ldd	r23, Y+26	; 0x1a
 3d0:	ce 01       	movw	r24, r28
 3d2:	01 96       	adiw	r24, 0x01	; 1
 3d4:	0e 94 fe 01 	call	0x3fc	; 0x3fc <vfprintf>
 3d8:	4d 81       	ldd	r20, Y+5	; 0x05
 3da:	5e 81       	ldd	r21, Y+6	; 0x06
 3dc:	57 fd       	sbrc	r21, 7
 3de:	0a c0       	rjmp	.+20     	; 0x3f4 <snprintf+0x58>
 3e0:	2f 81       	ldd	r18, Y+7	; 0x07
 3e2:	38 85       	ldd	r19, Y+8	; 0x08
 3e4:	42 17       	cp	r20, r18
 3e6:	53 07       	cpc	r21, r19
 3e8:	0c f4       	brge	.+2      	; 0x3ec <snprintf+0x50>
 3ea:	9a 01       	movw	r18, r20
 3ec:	f8 01       	movw	r30, r16
 3ee:	e2 0f       	add	r30, r18
 3f0:	f3 1f       	adc	r31, r19
 3f2:	10 82       	st	Z, r1
 3f4:	2e 96       	adiw	r28, 0x0e	; 14
 3f6:	e4 e0       	ldi	r30, 0x04	; 4
 3f8:	0c 94 b9 04 	jmp	0x972	; 0x972 <__epilogue_restores__+0x1c>

000003fc <vfprintf>:
 3fc:	ab e0       	ldi	r26, 0x0B	; 11
 3fe:	b0 e0       	ldi	r27, 0x00	; 0
 400:	e4 e0       	ldi	r30, 0x04	; 4
 402:	f2 e0       	ldi	r31, 0x02	; 2
 404:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__prologue_saves__>
 408:	6c 01       	movw	r12, r24
 40a:	7b 01       	movw	r14, r22
 40c:	8a 01       	movw	r16, r20
 40e:	fc 01       	movw	r30, r24
 410:	17 82       	std	Z+7, r1	; 0x07
 412:	16 82       	std	Z+6, r1	; 0x06
 414:	83 81       	ldd	r24, Z+3	; 0x03
 416:	81 ff       	sbrs	r24, 1
 418:	cc c1       	rjmp	.+920    	; 0x7b2 <__LOCK_REGION_LENGTH__+0x3b2>
 41a:	ce 01       	movw	r24, r28
 41c:	01 96       	adiw	r24, 0x01	; 1
 41e:	3c 01       	movw	r6, r24
 420:	f6 01       	movw	r30, r12
 422:	93 81       	ldd	r25, Z+3	; 0x03
 424:	f7 01       	movw	r30, r14
 426:	93 fd       	sbrc	r25, 3
 428:	85 91       	lpm	r24, Z+
 42a:	93 ff       	sbrs	r25, 3
 42c:	81 91       	ld	r24, Z+
 42e:	7f 01       	movw	r14, r30
 430:	88 23       	and	r24, r24
 432:	09 f4       	brne	.+2      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 434:	ba c1       	rjmp	.+884    	; 0x7aa <__LOCK_REGION_LENGTH__+0x3aa>
 436:	85 32       	cpi	r24, 0x25	; 37
 438:	39 f4       	brne	.+14     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 43a:	93 fd       	sbrc	r25, 3
 43c:	85 91       	lpm	r24, Z+
 43e:	93 ff       	sbrs	r25, 3
 440:	81 91       	ld	r24, Z+
 442:	7f 01       	movw	r14, r30
 444:	85 32       	cpi	r24, 0x25	; 37
 446:	29 f4       	brne	.+10     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 448:	b6 01       	movw	r22, r12
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 450:	e7 cf       	rjmp	.-50     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 452:	91 2c       	mov	r9, r1
 454:	21 2c       	mov	r2, r1
 456:	31 2c       	mov	r3, r1
 458:	ff e1       	ldi	r31, 0x1F	; 31
 45a:	f3 15       	cp	r31, r3
 45c:	d8 f0       	brcs	.+54     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 45e:	8b 32       	cpi	r24, 0x2B	; 43
 460:	79 f0       	breq	.+30     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 462:	38 f4       	brcc	.+14     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 464:	80 32       	cpi	r24, 0x20	; 32
 466:	79 f0       	breq	.+30     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 468:	83 32       	cpi	r24, 0x23	; 35
 46a:	a1 f4       	brne	.+40     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 46c:	23 2d       	mov	r18, r3
 46e:	20 61       	ori	r18, 0x10	; 16
 470:	1d c0       	rjmp	.+58     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 472:	8d 32       	cpi	r24, 0x2D	; 45
 474:	61 f0       	breq	.+24     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 476:	80 33       	cpi	r24, 0x30	; 48
 478:	69 f4       	brne	.+26     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 47a:	23 2d       	mov	r18, r3
 47c:	21 60       	ori	r18, 0x01	; 1
 47e:	16 c0       	rjmp	.+44     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 480:	83 2d       	mov	r24, r3
 482:	82 60       	ori	r24, 0x02	; 2
 484:	38 2e       	mov	r3, r24
 486:	e3 2d       	mov	r30, r3
 488:	e4 60       	ori	r30, 0x04	; 4
 48a:	3e 2e       	mov	r3, r30
 48c:	2a c0       	rjmp	.+84     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 48e:	f3 2d       	mov	r31, r3
 490:	f8 60       	ori	r31, 0x08	; 8
 492:	1d c0       	rjmp	.+58     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 494:	37 fc       	sbrc	r3, 7
 496:	2d c0       	rjmp	.+90     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 498:	20 ed       	ldi	r18, 0xD0	; 208
 49a:	28 0f       	add	r18, r24
 49c:	2a 30       	cpi	r18, 0x0A	; 10
 49e:	40 f0       	brcs	.+16     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4a0:	8e 32       	cpi	r24, 0x2E	; 46
 4a2:	b9 f4       	brne	.+46     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4a4:	36 fc       	sbrc	r3, 6
 4a6:	81 c1       	rjmp	.+770    	; 0x7aa <__LOCK_REGION_LENGTH__+0x3aa>
 4a8:	23 2d       	mov	r18, r3
 4aa:	20 64       	ori	r18, 0x40	; 64
 4ac:	32 2e       	mov	r3, r18
 4ae:	19 c0       	rjmp	.+50     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4b0:	36 fe       	sbrs	r3, 6
 4b2:	06 c0       	rjmp	.+12     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4b4:	8a e0       	ldi	r24, 0x0A	; 10
 4b6:	98 9e       	mul	r9, r24
 4b8:	20 0d       	add	r18, r0
 4ba:	11 24       	eor	r1, r1
 4bc:	92 2e       	mov	r9, r18
 4be:	11 c0       	rjmp	.+34     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4c0:	ea e0       	ldi	r30, 0x0A	; 10
 4c2:	2e 9e       	mul	r2, r30
 4c4:	20 0d       	add	r18, r0
 4c6:	11 24       	eor	r1, r1
 4c8:	22 2e       	mov	r2, r18
 4ca:	f3 2d       	mov	r31, r3
 4cc:	f0 62       	ori	r31, 0x20	; 32
 4ce:	3f 2e       	mov	r3, r31
 4d0:	08 c0       	rjmp	.+16     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4d2:	8c 36       	cpi	r24, 0x6C	; 108
 4d4:	21 f4       	brne	.+8      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4d6:	83 2d       	mov	r24, r3
 4d8:	80 68       	ori	r24, 0x80	; 128
 4da:	38 2e       	mov	r3, r24
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4de:	88 36       	cpi	r24, 0x68	; 104
 4e0:	41 f4       	brne	.+16     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4e2:	f7 01       	movw	r30, r14
 4e4:	93 fd       	sbrc	r25, 3
 4e6:	85 91       	lpm	r24, Z+
 4e8:	93 ff       	sbrs	r25, 3
 4ea:	81 91       	ld	r24, Z+
 4ec:	7f 01       	movw	r14, r30
 4ee:	81 11       	cpse	r24, r1
 4f0:	b3 cf       	rjmp	.-154    	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 4f2:	98 2f       	mov	r25, r24
 4f4:	9f 7d       	andi	r25, 0xDF	; 223
 4f6:	95 54       	subi	r25, 0x45	; 69
 4f8:	93 30       	cpi	r25, 0x03	; 3
 4fa:	28 f4       	brcc	.+10     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4fc:	0c 5f       	subi	r16, 0xFC	; 252
 4fe:	1f 4f       	sbci	r17, 0xFF	; 255
 500:	9f e3       	ldi	r25, 0x3F	; 63
 502:	99 83       	std	Y+1, r25	; 0x01
 504:	0d c0       	rjmp	.+26     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 506:	83 36       	cpi	r24, 0x63	; 99
 508:	31 f0       	breq	.+12     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 50a:	83 37       	cpi	r24, 0x73	; 115
 50c:	71 f0       	breq	.+28     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 50e:	83 35       	cpi	r24, 0x53	; 83
 510:	09 f0       	breq	.+2      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 512:	59 c0       	rjmp	.+178    	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 514:	21 c0       	rjmp	.+66     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 516:	f8 01       	movw	r30, r16
 518:	80 81       	ld	r24, Z
 51a:	89 83       	std	Y+1, r24	; 0x01
 51c:	0e 5f       	subi	r16, 0xFE	; 254
 51e:	1f 4f       	sbci	r17, 0xFF	; 255
 520:	88 24       	eor	r8, r8
 522:	83 94       	inc	r8
 524:	91 2c       	mov	r9, r1
 526:	53 01       	movw	r10, r6
 528:	13 c0       	rjmp	.+38     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 52a:	28 01       	movw	r4, r16
 52c:	f2 e0       	ldi	r31, 0x02	; 2
 52e:	4f 0e       	add	r4, r31
 530:	51 1c       	adc	r5, r1
 532:	f8 01       	movw	r30, r16
 534:	a0 80       	ld	r10, Z
 536:	b1 80       	ldd	r11, Z+1	; 0x01
 538:	36 fe       	sbrs	r3, 6
 53a:	03 c0       	rjmp	.+6      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 53c:	69 2d       	mov	r22, r9
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	02 c0       	rjmp	.+4      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 542:	6f ef       	ldi	r22, 0xFF	; 255
 544:	7f ef       	ldi	r23, 0xFF	; 255
 546:	c5 01       	movw	r24, r10
 548:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <strnlen>
 54c:	4c 01       	movw	r8, r24
 54e:	82 01       	movw	r16, r4
 550:	f3 2d       	mov	r31, r3
 552:	ff 77       	andi	r31, 0x7F	; 127
 554:	3f 2e       	mov	r3, r31
 556:	16 c0       	rjmp	.+44     	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 558:	28 01       	movw	r4, r16
 55a:	22 e0       	ldi	r18, 0x02	; 2
 55c:	42 0e       	add	r4, r18
 55e:	51 1c       	adc	r5, r1
 560:	f8 01       	movw	r30, r16
 562:	a0 80       	ld	r10, Z
 564:	b1 80       	ldd	r11, Z+1	; 0x01
 566:	36 fe       	sbrs	r3, 6
 568:	03 c0       	rjmp	.+6      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56a:	69 2d       	mov	r22, r9
 56c:	70 e0       	ldi	r23, 0x00	; 0
 56e:	02 c0       	rjmp	.+4      	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 570:	6f ef       	ldi	r22, 0xFF	; 255
 572:	7f ef       	ldi	r23, 0xFF	; 255
 574:	c5 01       	movw	r24, r10
 576:	0e 94 df 03 	call	0x7be	; 0x7be <strnlen_P>
 57a:	4c 01       	movw	r8, r24
 57c:	f3 2d       	mov	r31, r3
 57e:	f0 68       	ori	r31, 0x80	; 128
 580:	3f 2e       	mov	r3, r31
 582:	82 01       	movw	r16, r4
 584:	33 fc       	sbrc	r3, 3
 586:	1b c0       	rjmp	.+54     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 588:	82 2d       	mov	r24, r2
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	88 16       	cp	r8, r24
 58e:	99 06       	cpc	r9, r25
 590:	b0 f4       	brcc	.+44     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 592:	b6 01       	movw	r22, r12
 594:	80 e2       	ldi	r24, 0x20	; 32
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 59c:	2a 94       	dec	r2
 59e:	f4 cf       	rjmp	.-24     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 5a0:	f5 01       	movw	r30, r10
 5a2:	37 fc       	sbrc	r3, 7
 5a4:	85 91       	lpm	r24, Z+
 5a6:	37 fe       	sbrs	r3, 7
 5a8:	81 91       	ld	r24, Z+
 5aa:	5f 01       	movw	r10, r30
 5ac:	b6 01       	movw	r22, r12
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 5b4:	21 10       	cpse	r2, r1
 5b6:	2a 94       	dec	r2
 5b8:	21 e0       	ldi	r18, 0x01	; 1
 5ba:	82 1a       	sub	r8, r18
 5bc:	91 08       	sbc	r9, r1
 5be:	81 14       	cp	r8, r1
 5c0:	91 04       	cpc	r9, r1
 5c2:	71 f7       	brne	.-36     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 5c4:	e8 c0       	rjmp	.+464    	; 0x796 <__LOCK_REGION_LENGTH__+0x396>
 5c6:	84 36       	cpi	r24, 0x64	; 100
 5c8:	11 f0       	breq	.+4      	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5ca:	89 36       	cpi	r24, 0x69	; 105
 5cc:	41 f5       	brne	.+80     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 5ce:	f8 01       	movw	r30, r16
 5d0:	37 fe       	sbrs	r3, 7
 5d2:	07 c0       	rjmp	.+14     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5d4:	60 81       	ld	r22, Z
 5d6:	71 81       	ldd	r23, Z+1	; 0x01
 5d8:	82 81       	ldd	r24, Z+2	; 0x02
 5da:	93 81       	ldd	r25, Z+3	; 0x03
 5dc:	0c 5f       	subi	r16, 0xFC	; 252
 5de:	1f 4f       	sbci	r17, 0xFF	; 255
 5e0:	08 c0       	rjmp	.+16     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5e2:	60 81       	ld	r22, Z
 5e4:	71 81       	ldd	r23, Z+1	; 0x01
 5e6:	07 2e       	mov	r0, r23
 5e8:	00 0c       	add	r0, r0
 5ea:	88 0b       	sbc	r24, r24
 5ec:	99 0b       	sbc	r25, r25
 5ee:	0e 5f       	subi	r16, 0xFE	; 254
 5f0:	1f 4f       	sbci	r17, 0xFF	; 255
 5f2:	f3 2d       	mov	r31, r3
 5f4:	ff 76       	andi	r31, 0x6F	; 111
 5f6:	3f 2e       	mov	r3, r31
 5f8:	97 ff       	sbrs	r25, 7
 5fa:	09 c0       	rjmp	.+18     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5fc:	90 95       	com	r25
 5fe:	80 95       	com	r24
 600:	70 95       	com	r23
 602:	61 95       	neg	r22
 604:	7f 4f       	sbci	r23, 0xFF	; 255
 606:	8f 4f       	sbci	r24, 0xFF	; 255
 608:	9f 4f       	sbci	r25, 0xFF	; 255
 60a:	f0 68       	ori	r31, 0x80	; 128
 60c:	3f 2e       	mov	r3, r31
 60e:	2a e0       	ldi	r18, 0x0A	; 10
 610:	30 e0       	ldi	r19, 0x00	; 0
 612:	a3 01       	movw	r20, r6
 614:	0e 94 31 04 	call	0x862	; 0x862 <__ultoa_invert>
 618:	88 2e       	mov	r8, r24
 61a:	86 18       	sub	r8, r6
 61c:	45 c0       	rjmp	.+138    	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 61e:	85 37       	cpi	r24, 0x75	; 117
 620:	31 f4       	brne	.+12     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 622:	23 2d       	mov	r18, r3
 624:	2f 7e       	andi	r18, 0xEF	; 239
 626:	b2 2e       	mov	r11, r18
 628:	2a e0       	ldi	r18, 0x0A	; 10
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	25 c0       	rjmp	.+74     	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 62e:	93 2d       	mov	r25, r3
 630:	99 7f       	andi	r25, 0xF9	; 249
 632:	b9 2e       	mov	r11, r25
 634:	8f 36       	cpi	r24, 0x6F	; 111
 636:	c1 f0       	breq	.+48     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 638:	18 f4       	brcc	.+6      	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 63a:	88 35       	cpi	r24, 0x58	; 88
 63c:	79 f0       	breq	.+30     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 63e:	b5 c0       	rjmp	.+362    	; 0x7aa <__LOCK_REGION_LENGTH__+0x3aa>
 640:	80 37       	cpi	r24, 0x70	; 112
 642:	19 f0       	breq	.+6      	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 644:	88 37       	cpi	r24, 0x78	; 120
 646:	21 f0       	breq	.+8      	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 648:	b0 c0       	rjmp	.+352    	; 0x7aa <__LOCK_REGION_LENGTH__+0x3aa>
 64a:	e9 2f       	mov	r30, r25
 64c:	e0 61       	ori	r30, 0x10	; 16
 64e:	be 2e       	mov	r11, r30
 650:	b4 fe       	sbrs	r11, 4
 652:	0d c0       	rjmp	.+26     	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 654:	fb 2d       	mov	r31, r11
 656:	f4 60       	ori	r31, 0x04	; 4
 658:	bf 2e       	mov	r11, r31
 65a:	09 c0       	rjmp	.+18     	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 65c:	34 fe       	sbrs	r3, 4
 65e:	0a c0       	rjmp	.+20     	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 660:	29 2f       	mov	r18, r25
 662:	26 60       	ori	r18, 0x06	; 6
 664:	b2 2e       	mov	r11, r18
 666:	06 c0       	rjmp	.+12     	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 668:	28 e0       	ldi	r18, 0x08	; 8
 66a:	30 e0       	ldi	r19, 0x00	; 0
 66c:	05 c0       	rjmp	.+10     	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 66e:	20 e1       	ldi	r18, 0x10	; 16
 670:	30 e0       	ldi	r19, 0x00	; 0
 672:	02 c0       	rjmp	.+4      	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 674:	20 e1       	ldi	r18, 0x10	; 16
 676:	32 e0       	ldi	r19, 0x02	; 2
 678:	f8 01       	movw	r30, r16
 67a:	b7 fe       	sbrs	r11, 7
 67c:	07 c0       	rjmp	.+14     	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 67e:	60 81       	ld	r22, Z
 680:	71 81       	ldd	r23, Z+1	; 0x01
 682:	82 81       	ldd	r24, Z+2	; 0x02
 684:	93 81       	ldd	r25, Z+3	; 0x03
 686:	0c 5f       	subi	r16, 0xFC	; 252
 688:	1f 4f       	sbci	r17, 0xFF	; 255
 68a:	06 c0       	rjmp	.+12     	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 68c:	60 81       	ld	r22, Z
 68e:	71 81       	ldd	r23, Z+1	; 0x01
 690:	80 e0       	ldi	r24, 0x00	; 0
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	0e 5f       	subi	r16, 0xFE	; 254
 696:	1f 4f       	sbci	r17, 0xFF	; 255
 698:	a3 01       	movw	r20, r6
 69a:	0e 94 31 04 	call	0x862	; 0x862 <__ultoa_invert>
 69e:	88 2e       	mov	r8, r24
 6a0:	86 18       	sub	r8, r6
 6a2:	fb 2d       	mov	r31, r11
 6a4:	ff 77       	andi	r31, 0x7F	; 127
 6a6:	3f 2e       	mov	r3, r31
 6a8:	36 fe       	sbrs	r3, 6
 6aa:	0d c0       	rjmp	.+26     	; 0x6c6 <__LOCK_REGION_LENGTH__+0x2c6>
 6ac:	23 2d       	mov	r18, r3
 6ae:	2e 7f       	andi	r18, 0xFE	; 254
 6b0:	a2 2e       	mov	r10, r18
 6b2:	89 14       	cp	r8, r9
 6b4:	58 f4       	brcc	.+22     	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6b6:	34 fe       	sbrs	r3, 4
 6b8:	0b c0       	rjmp	.+22     	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ba:	32 fc       	sbrc	r3, 2
 6bc:	09 c0       	rjmp	.+18     	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6be:	83 2d       	mov	r24, r3
 6c0:	8e 7e       	andi	r24, 0xEE	; 238
 6c2:	a8 2e       	mov	r10, r24
 6c4:	05 c0       	rjmp	.+10     	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6c6:	b8 2c       	mov	r11, r8
 6c8:	a3 2c       	mov	r10, r3
 6ca:	03 c0       	rjmp	.+6      	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6cc:	b8 2c       	mov	r11, r8
 6ce:	01 c0       	rjmp	.+2      	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6d0:	b9 2c       	mov	r11, r9
 6d2:	a4 fe       	sbrs	r10, 4
 6d4:	0f c0       	rjmp	.+30     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6d6:	fe 01       	movw	r30, r28
 6d8:	e8 0d       	add	r30, r8
 6da:	f1 1d       	adc	r31, r1
 6dc:	80 81       	ld	r24, Z
 6de:	80 33       	cpi	r24, 0x30	; 48
 6e0:	21 f4       	brne	.+8      	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6e2:	9a 2d       	mov	r25, r10
 6e4:	99 7e       	andi	r25, 0xE9	; 233
 6e6:	a9 2e       	mov	r10, r25
 6e8:	09 c0       	rjmp	.+18     	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 6ea:	a2 fe       	sbrs	r10, 2
 6ec:	06 c0       	rjmp	.+12     	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6ee:	b3 94       	inc	r11
 6f0:	b3 94       	inc	r11
 6f2:	04 c0       	rjmp	.+8      	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 6f4:	8a 2d       	mov	r24, r10
 6f6:	86 78       	andi	r24, 0x86	; 134
 6f8:	09 f0       	breq	.+2      	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 6fa:	b3 94       	inc	r11
 6fc:	a3 fc       	sbrc	r10, 3
 6fe:	11 c0       	rjmp	.+34     	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 700:	a0 fe       	sbrs	r10, 0
 702:	06 c0       	rjmp	.+12     	; 0x710 <__LOCK_REGION_LENGTH__+0x310>
 704:	b2 14       	cp	r11, r2
 706:	88 f4       	brcc	.+34     	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 708:	28 0c       	add	r2, r8
 70a:	92 2c       	mov	r9, r2
 70c:	9b 18       	sub	r9, r11
 70e:	0e c0       	rjmp	.+28     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 710:	b2 14       	cp	r11, r2
 712:	60 f4       	brcc	.+24     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 714:	b6 01       	movw	r22, r12
 716:	80 e2       	ldi	r24, 0x20	; 32
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 71e:	b3 94       	inc	r11
 720:	f7 cf       	rjmp	.-18     	; 0x710 <__LOCK_REGION_LENGTH__+0x310>
 722:	b2 14       	cp	r11, r2
 724:	18 f4       	brcc	.+6      	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 726:	2b 18       	sub	r2, r11
 728:	02 c0       	rjmp	.+4      	; 0x72e <__LOCK_REGION_LENGTH__+0x32e>
 72a:	98 2c       	mov	r9, r8
 72c:	21 2c       	mov	r2, r1
 72e:	a4 fe       	sbrs	r10, 4
 730:	10 c0       	rjmp	.+32     	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 732:	b6 01       	movw	r22, r12
 734:	80 e3       	ldi	r24, 0x30	; 48
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 73c:	a2 fe       	sbrs	r10, 2
 73e:	17 c0       	rjmp	.+46     	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 740:	a1 fc       	sbrc	r10, 1
 742:	03 c0       	rjmp	.+6      	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 744:	88 e7       	ldi	r24, 0x78	; 120
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	02 c0       	rjmp	.+4      	; 0x74e <__LOCK_REGION_LENGTH__+0x34e>
 74a:	88 e5       	ldi	r24, 0x58	; 88
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	b6 01       	movw	r22, r12
 750:	0c c0       	rjmp	.+24     	; 0x76a <__LOCK_REGION_LENGTH__+0x36a>
 752:	8a 2d       	mov	r24, r10
 754:	86 78       	andi	r24, 0x86	; 134
 756:	59 f0       	breq	.+22     	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 758:	a1 fe       	sbrs	r10, 1
 75a:	02 c0       	rjmp	.+4      	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
 75c:	8b e2       	ldi	r24, 0x2B	; 43
 75e:	01 c0       	rjmp	.+2      	; 0x762 <__LOCK_REGION_LENGTH__+0x362>
 760:	80 e2       	ldi	r24, 0x20	; 32
 762:	a7 fc       	sbrc	r10, 7
 764:	8d e2       	ldi	r24, 0x2D	; 45
 766:	b6 01       	movw	r22, r12
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 76e:	89 14       	cp	r8, r9
 770:	38 f4       	brcc	.+14     	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 772:	b6 01       	movw	r22, r12
 774:	80 e3       	ldi	r24, 0x30	; 48
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 77c:	9a 94       	dec	r9
 77e:	f7 cf       	rjmp	.-18     	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 780:	8a 94       	dec	r8
 782:	f3 01       	movw	r30, r6
 784:	e8 0d       	add	r30, r8
 786:	f1 1d       	adc	r31, r1
 788:	80 81       	ld	r24, Z
 78a:	b6 01       	movw	r22, r12
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 792:	81 10       	cpse	r8, r1
 794:	f5 cf       	rjmp	.-22     	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 796:	22 20       	and	r2, r2
 798:	09 f4       	brne	.+2      	; 0x79c <__LOCK_REGION_LENGTH__+0x39c>
 79a:	42 ce       	rjmp	.-892    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 79c:	b6 01       	movw	r22, r12
 79e:	80 e2       	ldi	r24, 0x20	; 32
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 7a6:	2a 94       	dec	r2
 7a8:	f6 cf       	rjmp	.-20     	; 0x796 <__LOCK_REGION_LENGTH__+0x396>
 7aa:	f6 01       	movw	r30, r12
 7ac:	86 81       	ldd	r24, Z+6	; 0x06
 7ae:	97 81       	ldd	r25, Z+7	; 0x07
 7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <__LOCK_REGION_LENGTH__+0x3b6>
 7b2:	8f ef       	ldi	r24, 0xFF	; 255
 7b4:	9f ef       	ldi	r25, 0xFF	; 255
 7b6:	2b 96       	adiw	r28, 0x0b	; 11
 7b8:	e2 e1       	ldi	r30, 0x12	; 18
 7ba:	0c 94 ab 04 	jmp	0x956	; 0x956 <__epilogue_restores__>

000007be <strnlen_P>:
 7be:	fc 01       	movw	r30, r24
 7c0:	05 90       	lpm	r0, Z+
 7c2:	61 50       	subi	r22, 0x01	; 1
 7c4:	70 40       	sbci	r23, 0x00	; 0
 7c6:	01 10       	cpse	r0, r1
 7c8:	d8 f7       	brcc	.-10     	; 0x7c0 <strnlen_P+0x2>
 7ca:	80 95       	com	r24
 7cc:	90 95       	com	r25
 7ce:	8e 0f       	add	r24, r30
 7d0:	9f 1f       	adc	r25, r31
 7d2:	08 95       	ret

000007d4 <strnlen>:
 7d4:	fc 01       	movw	r30, r24
 7d6:	61 50       	subi	r22, 0x01	; 1
 7d8:	70 40       	sbci	r23, 0x00	; 0
 7da:	01 90       	ld	r0, Z+
 7dc:	01 10       	cpse	r0, r1
 7de:	d8 f7       	brcc	.-10     	; 0x7d6 <strnlen+0x2>
 7e0:	80 95       	com	r24
 7e2:	90 95       	com	r25
 7e4:	8e 0f       	add	r24, r30
 7e6:	9f 1f       	adc	r25, r31
 7e8:	08 95       	ret

000007ea <fputc>:
 7ea:	0f 93       	push	r16
 7ec:	1f 93       	push	r17
 7ee:	cf 93       	push	r28
 7f0:	df 93       	push	r29
 7f2:	fb 01       	movw	r30, r22
 7f4:	23 81       	ldd	r18, Z+3	; 0x03
 7f6:	21 fd       	sbrc	r18, 1
 7f8:	03 c0       	rjmp	.+6      	; 0x800 <fputc+0x16>
 7fa:	8f ef       	ldi	r24, 0xFF	; 255
 7fc:	9f ef       	ldi	r25, 0xFF	; 255
 7fe:	2c c0       	rjmp	.+88     	; 0x858 <fputc+0x6e>
 800:	22 ff       	sbrs	r18, 2
 802:	16 c0       	rjmp	.+44     	; 0x830 <fputc+0x46>
 804:	46 81       	ldd	r20, Z+6	; 0x06
 806:	57 81       	ldd	r21, Z+7	; 0x07
 808:	24 81       	ldd	r18, Z+4	; 0x04
 80a:	35 81       	ldd	r19, Z+5	; 0x05
 80c:	42 17       	cp	r20, r18
 80e:	53 07       	cpc	r21, r19
 810:	44 f4       	brge	.+16     	; 0x822 <fputc+0x38>
 812:	a0 81       	ld	r26, Z
 814:	b1 81       	ldd	r27, Z+1	; 0x01
 816:	9d 01       	movw	r18, r26
 818:	2f 5f       	subi	r18, 0xFF	; 255
 81a:	3f 4f       	sbci	r19, 0xFF	; 255
 81c:	31 83       	std	Z+1, r19	; 0x01
 81e:	20 83       	st	Z, r18
 820:	8c 93       	st	X, r24
 822:	26 81       	ldd	r18, Z+6	; 0x06
 824:	37 81       	ldd	r19, Z+7	; 0x07
 826:	2f 5f       	subi	r18, 0xFF	; 255
 828:	3f 4f       	sbci	r19, 0xFF	; 255
 82a:	37 83       	std	Z+7, r19	; 0x07
 82c:	26 83       	std	Z+6, r18	; 0x06
 82e:	14 c0       	rjmp	.+40     	; 0x858 <fputc+0x6e>
 830:	8b 01       	movw	r16, r22
 832:	ec 01       	movw	r28, r24
 834:	fb 01       	movw	r30, r22
 836:	00 84       	ldd	r0, Z+8	; 0x08
 838:	f1 85       	ldd	r31, Z+9	; 0x09
 83a:	e0 2d       	mov	r30, r0
 83c:	09 95       	icall
 83e:	89 2b       	or	r24, r25
 840:	e1 f6       	brne	.-72     	; 0x7fa <fputc+0x10>
 842:	d8 01       	movw	r26, r16
 844:	16 96       	adiw	r26, 0x06	; 6
 846:	8d 91       	ld	r24, X+
 848:	9c 91       	ld	r25, X
 84a:	17 97       	sbiw	r26, 0x07	; 7
 84c:	01 96       	adiw	r24, 0x01	; 1
 84e:	17 96       	adiw	r26, 0x07	; 7
 850:	9c 93       	st	X, r25
 852:	8e 93       	st	-X, r24
 854:	16 97       	sbiw	r26, 0x06	; 6
 856:	ce 01       	movw	r24, r28
 858:	df 91       	pop	r29
 85a:	cf 91       	pop	r28
 85c:	1f 91       	pop	r17
 85e:	0f 91       	pop	r16
 860:	08 95       	ret

00000862 <__ultoa_invert>:
 862:	fa 01       	movw	r30, r20
 864:	aa 27       	eor	r26, r26
 866:	28 30       	cpi	r18, 0x08	; 8
 868:	51 f1       	breq	.+84     	; 0x8be <__ultoa_invert+0x5c>
 86a:	20 31       	cpi	r18, 0x10	; 16
 86c:	81 f1       	breq	.+96     	; 0x8ce <__ultoa_invert+0x6c>
 86e:	e8 94       	clt
 870:	6f 93       	push	r22
 872:	6e 7f       	andi	r22, 0xFE	; 254
 874:	6e 5f       	subi	r22, 0xFE	; 254
 876:	7f 4f       	sbci	r23, 0xFF	; 255
 878:	8f 4f       	sbci	r24, 0xFF	; 255
 87a:	9f 4f       	sbci	r25, 0xFF	; 255
 87c:	af 4f       	sbci	r26, 0xFF	; 255
 87e:	b1 e0       	ldi	r27, 0x01	; 1
 880:	3e d0       	rcall	.+124    	; 0x8fe <__ultoa_invert+0x9c>
 882:	b4 e0       	ldi	r27, 0x04	; 4
 884:	3c d0       	rcall	.+120    	; 0x8fe <__ultoa_invert+0x9c>
 886:	67 0f       	add	r22, r23
 888:	78 1f       	adc	r23, r24
 88a:	89 1f       	adc	r24, r25
 88c:	9a 1f       	adc	r25, r26
 88e:	a1 1d       	adc	r26, r1
 890:	68 0f       	add	r22, r24
 892:	79 1f       	adc	r23, r25
 894:	8a 1f       	adc	r24, r26
 896:	91 1d       	adc	r25, r1
 898:	a1 1d       	adc	r26, r1
 89a:	6a 0f       	add	r22, r26
 89c:	71 1d       	adc	r23, r1
 89e:	81 1d       	adc	r24, r1
 8a0:	91 1d       	adc	r25, r1
 8a2:	a1 1d       	adc	r26, r1
 8a4:	20 d0       	rcall	.+64     	; 0x8e6 <__ultoa_invert+0x84>
 8a6:	09 f4       	brne	.+2      	; 0x8aa <__ultoa_invert+0x48>
 8a8:	68 94       	set
 8aa:	3f 91       	pop	r19
 8ac:	2a e0       	ldi	r18, 0x0A	; 10
 8ae:	26 9f       	mul	r18, r22
 8b0:	11 24       	eor	r1, r1
 8b2:	30 19       	sub	r19, r0
 8b4:	30 5d       	subi	r19, 0xD0	; 208
 8b6:	31 93       	st	Z+, r19
 8b8:	de f6       	brtc	.-74     	; 0x870 <__ultoa_invert+0xe>
 8ba:	cf 01       	movw	r24, r30
 8bc:	08 95       	ret
 8be:	46 2f       	mov	r20, r22
 8c0:	47 70       	andi	r20, 0x07	; 7
 8c2:	40 5d       	subi	r20, 0xD0	; 208
 8c4:	41 93       	st	Z+, r20
 8c6:	b3 e0       	ldi	r27, 0x03	; 3
 8c8:	0f d0       	rcall	.+30     	; 0x8e8 <__ultoa_invert+0x86>
 8ca:	c9 f7       	brne	.-14     	; 0x8be <__ultoa_invert+0x5c>
 8cc:	f6 cf       	rjmp	.-20     	; 0x8ba <__ultoa_invert+0x58>
 8ce:	46 2f       	mov	r20, r22
 8d0:	4f 70       	andi	r20, 0x0F	; 15
 8d2:	40 5d       	subi	r20, 0xD0	; 208
 8d4:	4a 33       	cpi	r20, 0x3A	; 58
 8d6:	18 f0       	brcs	.+6      	; 0x8de <__ultoa_invert+0x7c>
 8d8:	49 5d       	subi	r20, 0xD9	; 217
 8da:	31 fd       	sbrc	r19, 1
 8dc:	40 52       	subi	r20, 0x20	; 32
 8de:	41 93       	st	Z+, r20
 8e0:	02 d0       	rcall	.+4      	; 0x8e6 <__ultoa_invert+0x84>
 8e2:	a9 f7       	brne	.-22     	; 0x8ce <__ultoa_invert+0x6c>
 8e4:	ea cf       	rjmp	.-44     	; 0x8ba <__ultoa_invert+0x58>
 8e6:	b4 e0       	ldi	r27, 0x04	; 4
 8e8:	a6 95       	lsr	r26
 8ea:	97 95       	ror	r25
 8ec:	87 95       	ror	r24
 8ee:	77 95       	ror	r23
 8f0:	67 95       	ror	r22
 8f2:	ba 95       	dec	r27
 8f4:	c9 f7       	brne	.-14     	; 0x8e8 <__ultoa_invert+0x86>
 8f6:	00 97       	sbiw	r24, 0x00	; 0
 8f8:	61 05       	cpc	r22, r1
 8fa:	71 05       	cpc	r23, r1
 8fc:	08 95       	ret
 8fe:	9b 01       	movw	r18, r22
 900:	ac 01       	movw	r20, r24
 902:	0a 2e       	mov	r0, r26
 904:	06 94       	lsr	r0
 906:	57 95       	ror	r21
 908:	47 95       	ror	r20
 90a:	37 95       	ror	r19
 90c:	27 95       	ror	r18
 90e:	ba 95       	dec	r27
 910:	c9 f7       	brne	.-14     	; 0x904 <__stack+0x5>
 912:	62 0f       	add	r22, r18
 914:	73 1f       	adc	r23, r19
 916:	84 1f       	adc	r24, r20
 918:	95 1f       	adc	r25, r21
 91a:	a0 1d       	adc	r26, r0
 91c:	08 95       	ret

0000091e <__prologue_saves__>:
 91e:	2f 92       	push	r2
 920:	3f 92       	push	r3
 922:	4f 92       	push	r4
 924:	5f 92       	push	r5
 926:	6f 92       	push	r6
 928:	7f 92       	push	r7
 92a:	8f 92       	push	r8
 92c:	9f 92       	push	r9
 92e:	af 92       	push	r10
 930:	bf 92       	push	r11
 932:	cf 92       	push	r12
 934:	df 92       	push	r13
 936:	ef 92       	push	r14
 938:	ff 92       	push	r15
 93a:	0f 93       	push	r16
 93c:	1f 93       	push	r17
 93e:	cf 93       	push	r28
 940:	df 93       	push	r29
 942:	cd b7       	in	r28, 0x3d	; 61
 944:	de b7       	in	r29, 0x3e	; 62
 946:	ca 1b       	sub	r28, r26
 948:	db 0b       	sbc	r29, r27
 94a:	0f b6       	in	r0, 0x3f	; 63
 94c:	f8 94       	cli
 94e:	de bf       	out	0x3e, r29	; 62
 950:	0f be       	out	0x3f, r0	; 63
 952:	cd bf       	out	0x3d, r28	; 61
 954:	09 94       	ijmp

00000956 <__epilogue_restores__>:
 956:	2a 88       	ldd	r2, Y+18	; 0x12
 958:	39 88       	ldd	r3, Y+17	; 0x11
 95a:	48 88       	ldd	r4, Y+16	; 0x10
 95c:	5f 84       	ldd	r5, Y+15	; 0x0f
 95e:	6e 84       	ldd	r6, Y+14	; 0x0e
 960:	7d 84       	ldd	r7, Y+13	; 0x0d
 962:	8c 84       	ldd	r8, Y+12	; 0x0c
 964:	9b 84       	ldd	r9, Y+11	; 0x0b
 966:	aa 84       	ldd	r10, Y+10	; 0x0a
 968:	b9 84       	ldd	r11, Y+9	; 0x09
 96a:	c8 84       	ldd	r12, Y+8	; 0x08
 96c:	df 80       	ldd	r13, Y+7	; 0x07
 96e:	ee 80       	ldd	r14, Y+6	; 0x06
 970:	fd 80       	ldd	r15, Y+5	; 0x05
 972:	0c 81       	ldd	r16, Y+4	; 0x04
 974:	1b 81       	ldd	r17, Y+3	; 0x03
 976:	aa 81       	ldd	r26, Y+2	; 0x02
 978:	b9 81       	ldd	r27, Y+1	; 0x01
 97a:	ce 0f       	add	r28, r30
 97c:	d1 1d       	adc	r29, r1
 97e:	0f b6       	in	r0, 0x3f	; 63
 980:	f8 94       	cli
 982:	de bf       	out	0x3e, r29	; 62
 984:	0f be       	out	0x3f, r0	; 63
 986:	cd bf       	out	0x3d, r28	; 61
 988:	ed 01       	movw	r28, r26
 98a:	08 95       	ret

0000098c <_exit>:
 98c:	f8 94       	cli

0000098e <__stop_program>:
 98e:	ff cf       	rjmp	.-2      	; 0x98e <__stop_program>
